keycloak:
  external: "true"
  # Only used if keycloak.external is true
  url:
  realm:
  client_id:
  client_secret:

configmap:
  django:
    CORS_ORIGIN_WHITELIST: ""
    DJANGO_ADMIN_URL: '{{ .Values.django.admin_url }}'
    DJANGO_ALLOWED_HOSTS: ""
    DJANGO_SECURE_SSL_REDIRECT: "False"
    DJANGO_SETTINGS_MODULE: config.settings.production
    DJANGO_SECRET_KEY: '{{.Values.django.secret_key}}'
    DOMAIN_NAME: '{{ .Values.django.domain_name }}'
    DOMAIN_SUBDIRECTORY: ""
    KEYCLOAK_CLIENT_ID: '{{ .Values.keycloak.client_id }}'
    KEYCLOAK_REALM: '{{ .Values.keycloak.realm }}'
    KEYCLOAK_URL: '{{ include "metagrid.keycloak_url" $ }}'
    DATABASE_URL: '{{ include "metagrid.pg_uri" $ }}'
    REACT_APP_METAGRID_API_URL: '{{ .Values.ingress.host }}'
    REACT_APP_ESGF_NODE_URL: '{{ .Values.ingress.host }}/esg-search/search'
    REACT_APP_WGET_API_URL: '{{ .Values.ingress.host }}/esg-search/wget'
    REACT_APP_ESGF_NODE_STATUS_URL: https://aims2.llnl.gov/metagrid-backend/proxy/status

  react:
    REACT_APP_METAGRID_API_URL: 'http://{{ include "metagrid.fullname" . }}-django'
    PUBLIC_URL: "{{ .Values.ingress.frontend.path }}"
    REACT_APP_PREVIOUS_URL: "{{ .Values.ingress.frontend.path }}"
    REACT_APP_GLOBUS_REDIRECT: ""
    REACT_APP_CLIENT_ID: ""
    REACT_APP_GLOBUS_NODES: ""
    REACT_APP_WGET_API_URL: "https://greyworm1-rh7.llnl.gov/esg-search/wget"
    REACT_APP_SEARCH_URL: "https://esgf-node.llnl.gov/esg-search/search"
    REACT_APP_ESGF_NODE_STATUS_URL: https://aims2.llnl.gov/metagrid-backend/proxy/status
    REACT_APP_KEYCLOAK_REALM: "{{ .Values.keycloak.realm }}"
    REACT_APP_KEYCLOAK_URL: '{{ include "metagrid.keycloak_url" $ }}'
    REACT_APP_KEYCLOAK_CLIENT_ID: "{{ .Values.keycloak.client_id }}"
    REACT_APP_HOTJAR_ID: ""
    REACT_APP_HOTJAR_SV: ""

django:
  replicaCount: 1

  image:
    # TODO: switch to ghcr.io/aims-group/metagrid-backend once permissions are fixed
    repository: ghcr.io/esgf-nimbus/metagrid-backend
    pullPolicy: Always
    tag: latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  migrateJob:
    enabled: true
  admin_url: '{{ .Values.ingress.host }}'
  domain_name: '{{ .Values.ingress.host }}'
  secret_key:
  envFrom:
    - name: django
      type: configmap

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

react:
  replicaCount: 1

  image:
    # TODO: switch to ghcr.io/aims-group/metagrid-frontend once permissions are fixed
    repository: ghcr.io/esgf-nimbus/metagrid-frontend
    pullPolicy: Always
    tag: latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  envFrom:
  - type: configmap
    name: react

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

  monitoring:
    enabled: false

ingress:
  enabled: false
  host:
  annotations: {}
  labels: {}

  frontend:
    path: /metagrid

  backend:
    path: /metagrid-backend

postgresql:
  enabled: true

extraManifests: {}
