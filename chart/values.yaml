# Default values for metagrid.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
ingress:
  enabled: true
  host:
  annotations:
    route.openshift.io/termination: edge
    ccs.ornl.gov/requireAuth: "false"

  labels:
    ccs.ornl.gov/externalRoute: "true"

configmap:
  django:
    CORS_ORIGIN_WHITELIST: ""
    DJANGO_ADMIN_URL: '{{ .Values.django.admin_url }}'
    DJANGO_ALLOWED_HOSTS: ""
    DJANGO_SECURE_SSL_REDIRECT: "False"
    DJANGO_SETTINGS_MODULE: config.settings.production
    DJANGO_SECRET_KEY: '{{.Values.django.secret_key}}'
    DOMAIN_NAME: '{{ .Values.django.domain_name }}'
    DOMAIN_SUBDIRECTORY: ""
    KEYCLOAK_CLIENT_ID: '{{ .Values.keycloak.client_id }}'
    KEYCLOAK_REALM: '{{ .Values.keycloak.realm }}'
    KEYCLOAK_URL: '{{ include "metagrid.keycloak_url" $ }}'
    DATABASE_URL: '{{ include "metagrid.pg_uri" $ }}'
    REACT_APP_METAGRID_API_URL: '{{ .Values.ingress.host }}'
    REACT_APP_ESGF_NODE_URL: '{{ .Values.ingress.host }}/esg-search/search'
    REACT_APP_WGET_API_URL: '{{ .Values.ingress.host }}/esg-search/wget'
    REACT_APP_ESGF_NODE_STATUS_URL: https://aims2.llnl.gov/metagrid-backend/proxy/status

  react:
    REACT_APP_METAGRID_API_URL: '{{ .Values.ingress.host }}'
    REACT_APP_WGET_API_URL: '{{ .Values.ingress.host }}/esg-search/wget'
    REACT_APP_ESGF_NODE_URL: '{{ .Values.ingress.host }}/esg-search/search'
    REACT_APP_ESGF_NODE_STATUS_URL: https://aims4.llnl.gov/prometheus/api/v1/query?query=probe_success%7Bjob%3D%22http_2xx%22%2C+target%3D~%22.%2Athredds.%2A%22%7D
    REACT_APP_KEYCLOAK_REALM: '{{ .Values.keycloak.realm }}'
    REACT_APP_KEYCLOAK_URL: '{{ include "metagrid.keycloak_url" $ }}'
    REACT_APP_KEYCLOAK_CLIENT_ID: '{{ .Values.keycloak.client_id }}'

keycloak:
  external: "true"
  # Only used if keycloak.external is true
  url:
  realm:
  client_id:
  client_secret:

django:

  replicaCount: 1

  image:
    repository: ""
    pullPolicy: Always
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  migrateJob:
    enabled: true
  admin_url: '{{ .Values.ingress.host }}'
  domain_name: '{{ .Values.ingress.host }}'
  secret_key:
  envFrom:
    - name: django
      type: configmap

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

react:

  replicaCount: 1

  image:
    repository: ""
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  envFrom:
  - type: configmap
    name: react

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
    port: 8080

  monitoring:
    enabled: false

postgresql:
  enabled: true

extraManifests: {}
